Terminals unused in grammar

    STRING
    BOOLEAN


Grammar

    0 $accept: programa $end

    1 programa: function_declaration main

    2 function_declaration: function_declaration function
    3                     | %empty

    4 function: FUNC func_header ENDLINE sentences_list END ENDLINE

    5 parameters: parameters COMMA ID DDP ID
    6           | ID DDP ID
    7           | %empty

    8 func_header: ID push OP parameters CP func_return

    9 push: %empty

   10 func_return: DDP ID
   11            | %empty

   12 main: start_program sentences_list

   13 start_program: %empty

   14 sentences_list: sentences_list alpha sentence
   15               | sentence

   16 sentence: if_sentence
   17         | while_sentence
   18         | for_sentence
   19         | ID ASSIGN sumrest ENDLINE
   20         | sumrest ENDLINE
   21         | RETURN sumrest ENDLINE

   22 bool_value: sumrest rel_op sumrest
   23           | OP bool_value CP

   24 orlist: orlist OR alpha andlist
   25       | andlist

   26 andlist: andlist AND alpha bool_value
   27        | NOT bool_value
   28        | bool_value

   29 beta: %empty

   30 alpha: %empty

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif alpha elsee END ENDLINE

   32 elseif: elseif ELSEIF alpha orlist ENDLINE alpha sentences_list beta
   33       | %empty

   34 elsee: ELSE ENDLINE alpha sentences_list
   35      | %empty

   36 while_sentence: WHILE alpha orlist ENDLINE alpha sentences_list END ENDLINE

   37 for_sentence: gamma sentences_list END ENDLINE

   38 gamma: FOR ID IN sumrest DP sumrest DP sumrest ENDLINE
   39      | FOR ID IN sumrest DP sumrest ENDLINE

   40 rel_op: GREATERTHAN
   41       | GREATEREQ
   42       | LESSTHAN
   43       | LESSEQ
   44       | EQ
   45       | DIF
   46       | NOT

   47 matrix_value: FLOAT
   48             | INTEGER

   49 matrix: matrix PC row
   50       | row

   51 row: row SPACE matrix_value
   52    | matrix_value

   53 sumrest: sumrest SUMA mullist
   54        | sumrest RESTA mullist
   55        | mullist

   56 mullist: mullist MUL powlist
   57        | mullist DIV powlist
   58        | mullist MOD powlist
   59        | powlist

   60 powlist: powlist POW valor
   61        | valor

   62 valor: FLOAT
   63      | INTEGER
   64      | OP sumrest CP
   65      | ID
   66      | OC matrix CC
   67      | ID OC sumrest CC
   68      | ID OC sumrest COMMA sumrest CC
   69      | ID OP func_call CP

   70 func_call: func_call COMMA sumrest
   71          | sumrest
   72          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASSIGN <cl.st.value_data.sense_valor> (258) 19
    ENDLINE <cl.st.value_data.sense_valor> (259) 4 19 20 21 31 32 34 36 37 38 39
    INTEGER <cl.st.value_data.enter> (260) 48 63
    ID <cl.st> (261) 5 6 8 10 19 38 39 65 67 68 69
    FLOAT <cl.st.value_data.real> (262) 47 62
    STRING <cl.st.value_data.ident> (263)
    BOOLEAN <cl.st.value_data.boolean> (264)
    SUMA (265) 53
    RESTA (266) 54
    MUL (267) 56
    DIV (268) 57
    MOD (269) 58
    POW (270) 60
    OP (271) 8 23 64 69
    CP (272) 8 23 64 69
    OC (273) 66 67 68
    CC (274) 66 67 68
    PC (275) 49
    SPACE (276) 51
    COMMA (277) 5 68 70
    OR (278) 24
    AND (279) 26
    NOT (280) 27 46
    END (281) 4 31 36 37
    DDP (282) 5 6 10
    RETURN (283) 21
    FUNC (284) 4
    DP (285) 38 39
    GREATERTHAN (286) 40
    LESSTHAN (287) 42
    GREATEREQ (288) 41
    LESSEQ (289) 43
    EQ (290) 44
    DIF (291) 45
    FOR (292) 38 39
    IF (293) 31
    ELSE (294) 34
    ELSEIF (295) 32
    IN (296) 38 39
    WHILE (297) 36


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    programa <cl.st> (44)
        on left: 1
        on right: 0
    function_declaration (45)
        on left: 2 3
        on right: 1 2
    function (46)
        on left: 4
        on right: 2
    parameters <cl.st> (47)
        on left: 5 6 7
        on right: 5 8
    func_header <cl.st> (48)
        on left: 8
        on right: 4
    push (49)
        on left: 9
        on right: 8
    func_return <cl.st> (50)
        on left: 10 11
        on right: 8
    main (51)
        on left: 12
        on right: 1
    start_program (52)
        on left: 13
        on right: 12
    sentences_list <cl> (53)
        on left: 14 15
        on right: 4 12 14 31 32 34 36 37
    sentence <cl> (54)
        on left: 16 17 18 19 20 21
        on right: 14 15
    bool_value <cl> (55)
        on left: 22 23
        on right: 23 26 27 28
    orlist <cl> (56)
        on left: 24 25
        on right: 24 31 32 36
    andlist <cl> (57)
        on left: 26 27 28
        on right: 24 25 26
    beta <cl> (58)
        on left: 29
        on right: 31 32
    alpha <cl.st.value_data.enter> (59)
        on left: 30
        on right: 14 24 26 31 32 34 36
    if_sentence <cl> (60)
        on left: 31
        on right: 16
    elseif <cl> (61)
        on left: 32 33
        on right: 31 32
    elsee <cl> (62)
        on left: 34 35
        on right: 31
    while_sentence <cl> (63)
        on left: 36
        on right: 17
    for_sentence <cl> (64)
        on left: 37
        on right: 18
    gamma <cl> (65)
        on left: 38 39
        on right: 37
    rel_op <cl.st.value_data.ident.lexema> (66)
        on left: 40 41 42 43 44 45 46
        on right: 22
    matrix_value <cl.st> (67)
        on left: 47 48
        on right: 51 52
    matrix <cl.st> (68)
        on left: 49 50
        on right: 49 66
    row <cl.st> (69)
        on left: 51 52
        on right: 49 50 51
    sumrest <cl.st> (70)
        on left: 53 54 55
        on right: 19 20 21 22 38 39 53 54 64 67 68 70 71
    mullist <cl.st> (71)
        on left: 56 57 58 59
        on right: 53 54 55 56 57 58
    powlist <cl.st> (72)
        on left: 60 61
        on right: 56 57 58 59 60
    valor <cl.st> (73)
        on left: 62 63 64 65 66 67 68 69
        on right: 60 61
    func_call <cl.st> (74)
        on left: 70 71 72
        on right: 69 70


State 0

    0 $accept: . programa $end

    $default  reduce using rule 3 (function_declaration)

    programa              go to state 1
    function_declaration  go to state 2


State 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


State 2

    1 programa: function_declaration . main
    2 function_declaration: function_declaration . function

    FUNC  shift, and go to state 4

    $default  reduce using rule 13 (start_program)

    function       go to state 5
    main           go to state 6
    start_program  go to state 7


State 3

    0 $accept: programa $end .

    $default  accept


State 4

    4 function: FUNC . func_header ENDLINE sentences_list END ENDLINE

    ID  shift, and go to state 8

    func_header  go to state 9


State 5

    2 function_declaration: function_declaration function .

    $default  reduce using rule 2 (function_declaration)


State 6

    1 programa: function_declaration main .

    $default  reduce using rule 1 (programa)


State 7

   12 main: start_program . sentences_list

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 19
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 8

    8 func_header: ID . push OP parameters CP func_return

    $default  reduce using rule 9 (push)

    push  go to state 29


State 9

    4 function: FUNC func_header . ENDLINE sentences_list END ENDLINE

    ENDLINE  shift, and go to state 30


State 10

   63 valor: INTEGER .

    $default  reduce using rule 63 (valor)


State 11

   19 sentence: ID . ASSIGN sumrest ENDLINE
   65 valor: ID .
   67      | ID . OC sumrest CC
   68      | ID . OC sumrest COMMA sumrest CC
   69      | ID . OP func_call CP

    ASSIGN  shift, and go to state 31
    OP      shift, and go to state 32
    OC      shift, and go to state 33

    $default  reduce using rule 65 (valor)


State 12

   62 valor: FLOAT .

    $default  reduce using rule 62 (valor)


State 13

   64 valor: OP . sumrest CP

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 35
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 14

   66 valor: OC . matrix CC

    INTEGER  shift, and go to state 36
    FLOAT    shift, and go to state 37

    matrix_value  go to state 38
    matrix        go to state 39
    row           go to state 40


State 15

   21 sentence: RETURN . sumrest ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 41
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 16

   38 gamma: FOR . ID IN sumrest DP sumrest DP sumrest ENDLINE
   39      | FOR . ID IN sumrest DP sumrest ENDLINE

    ID  shift, and go to state 42


State 17

   31 if_sentence: IF . orlist ENDLINE alpha sentences_list beta alpha elseif alpha elsee END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14
    NOT      shift, and go to state 44

    bool_value  go to state 45
    orlist      go to state 46
    andlist     go to state 47
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 18

   36 while_sentence: WHILE . alpha orlist ENDLINE alpha sentences_list END ENDLINE

    $default  reduce using rule 30 (alpha)

    alpha  go to state 49


State 19

   12 main: start_program sentences_list .
   14 sentences_list: sentences_list . alpha sentence

    $end      reduce using rule 12 (main)
    $default  reduce using rule 30 (alpha)

    alpha  go to state 50


State 20

   15 sentences_list: sentence .

    $default  reduce using rule 15 (sentences_list)


State 21

   16 sentence: if_sentence .

    $default  reduce using rule 16 (sentence)


State 22

   17 sentence: while_sentence .

    $default  reduce using rule 17 (sentence)


State 23

   18 sentence: for_sentence .

    $default  reduce using rule 18 (sentence)


State 24

   37 for_sentence: gamma . sentences_list END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 51
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 25

   20 sentence: sumrest . ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    ENDLINE  shift, and go to state 52
    SUMA     shift, and go to state 53
    RESTA    shift, and go to state 54


State 26

   55 sumrest: mullist .
   56 mullist: mullist . MUL powlist
   57        | mullist . DIV powlist
   58        | mullist . MOD powlist

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 55 (sumrest)


State 27

   59 mullist: powlist .
   60 powlist: powlist . POW valor

    POW  shift, and go to state 58

    $default  reduce using rule 59 (mullist)


State 28

   61 powlist: valor .

    $default  reduce using rule 61 (powlist)


State 29

    8 func_header: ID push . OP parameters CP func_return

    OP  shift, and go to state 59


State 30

    4 function: FUNC func_header ENDLINE . sentences_list END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 60
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 31

   19 sentence: ID ASSIGN . sumrest ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 61
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 32

   69 valor: ID OP . func_call CP

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    $default  reduce using rule 72 (func_call)

    sumrest    go to state 62
    mullist    go to state 26
    powlist    go to state 27
    valor      go to state 28
    func_call  go to state 63


State 33

   67 valor: ID OC . sumrest CC
   68      | ID OC . sumrest COMMA sumrest CC

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 64
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 34

   65 valor: ID .
   67      | ID . OC sumrest CC
   68      | ID . OC sumrest COMMA sumrest CC
   69      | ID . OP func_call CP

    OP  shift, and go to state 32
    OC  shift, and go to state 33

    $default  reduce using rule 65 (valor)


State 35

   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   64 valor: OP sumrest . CP

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54
    CP     shift, and go to state 65


State 36

   48 matrix_value: INTEGER .

    $default  reduce using rule 48 (matrix_value)


State 37

   47 matrix_value: FLOAT .

    $default  reduce using rule 47 (matrix_value)


State 38

   52 row: matrix_value .

    $default  reduce using rule 52 (row)


State 39

   49 matrix: matrix . PC row
   66 valor: OC matrix . CC

    CC  shift, and go to state 66
    PC  shift, and go to state 67


State 40

   50 matrix: row .
   51 row: row . SPACE matrix_value

    SPACE  shift, and go to state 68

    $default  reduce using rule 50 (matrix)


State 41

   21 sentence: RETURN sumrest . ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    ENDLINE  shift, and go to state 69
    SUMA     shift, and go to state 53
    RESTA    shift, and go to state 54


State 42

   38 gamma: FOR ID . IN sumrest DP sumrest DP sumrest ENDLINE
   39      | FOR ID . IN sumrest DP sumrest ENDLINE

    IN  shift, and go to state 70


State 43

   23 bool_value: OP . bool_value CP
   64 valor: OP . sumrest CP

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14

    bool_value  go to state 71
    sumrest     go to state 72
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 44

   27 andlist: NOT . bool_value

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14

    bool_value  go to state 73
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 45

   28 andlist: bool_value .

    $default  reduce using rule 28 (andlist)


State 46

   24 orlist: orlist . OR alpha andlist
   31 if_sentence: IF orlist . ENDLINE alpha sentences_list beta alpha elseif alpha elsee END ENDLINE

    ENDLINE  shift, and go to state 74
    OR       shift, and go to state 75


State 47

   25 orlist: andlist .
   26 andlist: andlist . AND alpha bool_value

    AND  shift, and go to state 76

    $default  reduce using rule 25 (orlist)


State 48

   22 bool_value: sumrest . rel_op sumrest
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    SUMA         shift, and go to state 53
    RESTA        shift, and go to state 54
    NOT          shift, and go to state 77
    GREATERTHAN  shift, and go to state 78
    LESSTHAN     shift, and go to state 79
    GREATEREQ    shift, and go to state 80
    LESSEQ       shift, and go to state 81
    EQ           shift, and go to state 82
    DIF          shift, and go to state 83

    rel_op  go to state 84


State 49

   36 while_sentence: WHILE alpha . orlist ENDLINE alpha sentences_list END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14
    NOT      shift, and go to state 44

    bool_value  go to state 45
    orlist      go to state 85
    andlist     go to state 47
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 50

   14 sentences_list: sentences_list alpha . sentence

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentence        go to state 86
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 51

   14 sentences_list: sentences_list . alpha sentence
   37 for_sentence: gamma sentences_list . END ENDLINE

    END  shift, and go to state 87

    $default  reduce using rule 30 (alpha)

    alpha  go to state 50


State 52

   20 sentence: sumrest ENDLINE .

    $default  reduce using rule 20 (sentence)


State 53

   53 sumrest: sumrest SUMA . mullist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    mullist  go to state 88
    powlist  go to state 27
    valor    go to state 28


State 54

   54 sumrest: sumrest RESTA . mullist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    mullist  go to state 89
    powlist  go to state 27
    valor    go to state 28


State 55

   56 mullist: mullist MUL . powlist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    powlist  go to state 90
    valor    go to state 28


State 56

   57 mullist: mullist DIV . powlist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    powlist  go to state 91
    valor    go to state 28


State 57

   58 mullist: mullist MOD . powlist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    powlist  go to state 92
    valor    go to state 28


State 58

   60 powlist: powlist POW . valor

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    valor  go to state 93


State 59

    8 func_header: ID push OP . parameters CP func_return

    ID  shift, and go to state 94

    $default  reduce using rule 7 (parameters)

    parameters  go to state 95


State 60

    4 function: FUNC func_header ENDLINE sentences_list . END ENDLINE
   14 sentences_list: sentences_list . alpha sentence

    END  shift, and go to state 96

    $default  reduce using rule 30 (alpha)

    alpha  go to state 50


State 61

   19 sentence: ID ASSIGN sumrest . ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    ENDLINE  shift, and go to state 97
    SUMA     shift, and go to state 53
    RESTA    shift, and go to state 54


State 62

   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   71 func_call: sumrest .

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54

    $default  reduce using rule 71 (func_call)


State 63

   69 valor: ID OP func_call . CP
   70 func_call: func_call . COMMA sumrest

    CP     shift, and go to state 98
    COMMA  shift, and go to state 99


State 64

   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   67 valor: ID OC sumrest . CC
   68      | ID OC sumrest . COMMA sumrest CC

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54
    CC     shift, and go to state 100
    COMMA  shift, and go to state 101


State 65

   64 valor: OP sumrest CP .

    $default  reduce using rule 64 (valor)


State 66

   66 valor: OC matrix CC .

    $default  reduce using rule 66 (valor)


State 67

   49 matrix: matrix PC . row

    INTEGER  shift, and go to state 36
    FLOAT    shift, and go to state 37

    matrix_value  go to state 38
    row           go to state 102


State 68

   51 row: row SPACE . matrix_value

    INTEGER  shift, and go to state 36
    FLOAT    shift, and go to state 37

    matrix_value  go to state 103


State 69

   21 sentence: RETURN sumrest ENDLINE .

    $default  reduce using rule 21 (sentence)


State 70

   38 gamma: FOR ID IN . sumrest DP sumrest DP sumrest ENDLINE
   39      | FOR ID IN . sumrest DP sumrest ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 104
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 71

   23 bool_value: OP bool_value . CP

    CP  shift, and go to state 105


State 72

   22 bool_value: sumrest . rel_op sumrest
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   64 valor: OP sumrest . CP

    SUMA         shift, and go to state 53
    RESTA        shift, and go to state 54
    CP           shift, and go to state 65
    NOT          shift, and go to state 77
    GREATERTHAN  shift, and go to state 78
    LESSTHAN     shift, and go to state 79
    GREATEREQ    shift, and go to state 80
    LESSEQ       shift, and go to state 81
    EQ           shift, and go to state 82
    DIF          shift, and go to state 83

    rel_op  go to state 84


State 73

   27 andlist: NOT bool_value .

    $default  reduce using rule 27 (andlist)


State 74

   31 if_sentence: IF orlist ENDLINE . alpha sentences_list beta alpha elseif alpha elsee END ENDLINE

    $default  reduce using rule 30 (alpha)

    alpha  go to state 106


State 75

   24 orlist: orlist OR . alpha andlist

    $default  reduce using rule 30 (alpha)

    alpha  go to state 107


State 76

   26 andlist: andlist AND . alpha bool_value

    $default  reduce using rule 30 (alpha)

    alpha  go to state 108


State 77

   46 rel_op: NOT .

    $default  reduce using rule 46 (rel_op)


State 78

   40 rel_op: GREATERTHAN .

    $default  reduce using rule 40 (rel_op)


State 79

   42 rel_op: LESSTHAN .

    $default  reduce using rule 42 (rel_op)


State 80

   41 rel_op: GREATEREQ .

    $default  reduce using rule 41 (rel_op)


State 81

   43 rel_op: LESSEQ .

    $default  reduce using rule 43 (rel_op)


State 82

   44 rel_op: EQ .

    $default  reduce using rule 44 (rel_op)


State 83

   45 rel_op: DIF .

    $default  reduce using rule 45 (rel_op)


State 84

   22 bool_value: sumrest rel_op . sumrest

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 109
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 85

   24 orlist: orlist . OR alpha andlist
   36 while_sentence: WHILE alpha orlist . ENDLINE alpha sentences_list END ENDLINE

    ENDLINE  shift, and go to state 110
    OR       shift, and go to state 75


State 86

   14 sentences_list: sentences_list alpha sentence .

    $default  reduce using rule 14 (sentences_list)


State 87

   37 for_sentence: gamma sentences_list END . ENDLINE

    ENDLINE  shift, and go to state 111


State 88

   53 sumrest: sumrest SUMA mullist .
   56 mullist: mullist . MUL powlist
   57        | mullist . DIV powlist
   58        | mullist . MOD powlist

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 53 (sumrest)


State 89

   54 sumrest: sumrest RESTA mullist .
   56 mullist: mullist . MUL powlist
   57        | mullist . DIV powlist
   58        | mullist . MOD powlist

    MUL  shift, and go to state 55
    DIV  shift, and go to state 56
    MOD  shift, and go to state 57

    $default  reduce using rule 54 (sumrest)


State 90

   56 mullist: mullist MUL powlist .
   60 powlist: powlist . POW valor

    POW  shift, and go to state 58

    $default  reduce using rule 56 (mullist)


State 91

   57 mullist: mullist DIV powlist .
   60 powlist: powlist . POW valor

    POW  shift, and go to state 58

    $default  reduce using rule 57 (mullist)


State 92

   58 mullist: mullist MOD powlist .
   60 powlist: powlist . POW valor

    POW  shift, and go to state 58

    $default  reduce using rule 58 (mullist)


State 93

   60 powlist: powlist POW valor .

    $default  reduce using rule 60 (powlist)


State 94

    6 parameters: ID . DDP ID

    DDP  shift, and go to state 112


State 95

    5 parameters: parameters . COMMA ID DDP ID
    8 func_header: ID push OP parameters . CP func_return

    CP     shift, and go to state 113
    COMMA  shift, and go to state 114


State 96

    4 function: FUNC func_header ENDLINE sentences_list END . ENDLINE

    ENDLINE  shift, and go to state 115


State 97

   19 sentence: ID ASSIGN sumrest ENDLINE .

    $default  reduce using rule 19 (sentence)


State 98

   69 valor: ID OP func_call CP .

    $default  reduce using rule 69 (valor)


State 99

   70 func_call: func_call COMMA . sumrest

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 116
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 100

   67 valor: ID OC sumrest CC .

    $default  reduce using rule 67 (valor)


State 101

   68 valor: ID OC sumrest COMMA . sumrest CC

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 117
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 102

   49 matrix: matrix PC row .
   51 row: row . SPACE matrix_value

    SPACE  shift, and go to state 68

    $default  reduce using rule 49 (matrix)


State 103

   51 row: row SPACE matrix_value .

    $default  reduce using rule 51 (row)


State 104

   38 gamma: FOR ID IN sumrest . DP sumrest DP sumrest ENDLINE
   39      | FOR ID IN sumrest . DP sumrest ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54
    DP     shift, and go to state 118


State 105

   23 bool_value: OP bool_value CP .

    $default  reduce using rule 23 (bool_value)


State 106

   31 if_sentence: IF orlist ENDLINE alpha . sentences_list beta alpha elseif alpha elsee END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 119
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 107

   24 orlist: orlist OR alpha . andlist

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14
    NOT      shift, and go to state 44

    bool_value  go to state 45
    andlist     go to state 120
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 108

   26 andlist: andlist AND alpha . bool_value

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14

    bool_value  go to state 121
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 109

   22 bool_value: sumrest rel_op sumrest .
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54

    $default  reduce using rule 22 (bool_value)


State 110

   36 while_sentence: WHILE alpha orlist ENDLINE . alpha sentences_list END ENDLINE

    $default  reduce using rule 30 (alpha)

    alpha  go to state 122


State 111

   37 for_sentence: gamma sentences_list END ENDLINE .

    $default  reduce using rule 37 (for_sentence)


State 112

    6 parameters: ID DDP . ID

    ID  shift, and go to state 123


State 113

    8 func_header: ID push OP parameters CP . func_return

    DDP  shift, and go to state 124

    $default  reduce using rule 11 (func_return)

    func_return  go to state 125


State 114

    5 parameters: parameters COMMA . ID DDP ID

    ID  shift, and go to state 126


State 115

    4 function: FUNC func_header ENDLINE sentences_list END ENDLINE .

    $default  reduce using rule 4 (function)


State 116

   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   70 func_call: func_call COMMA sumrest .

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54

    $default  reduce using rule 70 (func_call)


State 117

   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist
   68 valor: ID OC sumrest COMMA sumrest . CC

    SUMA   shift, and go to state 53
    RESTA  shift, and go to state 54
    CC     shift, and go to state 127


State 118

   38 gamma: FOR ID IN sumrest DP . sumrest DP sumrest ENDLINE
   39      | FOR ID IN sumrest DP . sumrest ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 128
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 119

   14 sentences_list: sentences_list . alpha sentence
   31 if_sentence: IF orlist ENDLINE alpha sentences_list . beta alpha elseif alpha elsee END ENDLINE

    END       reduce using rule 29 (beta)
    ELSE      reduce using rule 29 (beta)
    ELSEIF    reduce using rule 29 (beta)
    $default  reduce using rule 30 (alpha)

    beta   go to state 129
    alpha  go to state 50


State 120

   24 orlist: orlist OR alpha andlist .
   26 andlist: andlist . AND alpha bool_value

    AND  shift, and go to state 76

    $default  reduce using rule 24 (orlist)


State 121

   26 andlist: andlist AND alpha bool_value .

    $default  reduce using rule 26 (andlist)


State 122

   36 while_sentence: WHILE alpha orlist ENDLINE alpha . sentences_list END ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 130
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 123

    6 parameters: ID DDP ID .

    $default  reduce using rule 6 (parameters)


State 124

   10 func_return: DDP . ID

    ID  shift, and go to state 131


State 125

    8 func_header: ID push OP parameters CP func_return .

    $default  reduce using rule 8 (func_header)


State 126

    5 parameters: parameters COMMA ID . DDP ID

    DDP  shift, and go to state 132


State 127

   68 valor: ID OC sumrest COMMA sumrest CC .

    $default  reduce using rule 68 (valor)


State 128

   38 gamma: FOR ID IN sumrest DP sumrest . DP sumrest ENDLINE
   39      | FOR ID IN sumrest DP sumrest . ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    ENDLINE  shift, and go to state 133
    SUMA     shift, and go to state 53
    RESTA    shift, and go to state 54
    DP       shift, and go to state 134


State 129

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta . alpha elseif alpha elsee END ENDLINE

    $default  reduce using rule 30 (alpha)

    alpha  go to state 135


State 130

   14 sentences_list: sentences_list . alpha sentence
   36 while_sentence: WHILE alpha orlist ENDLINE alpha sentences_list . END ENDLINE

    END  shift, and go to state 136

    $default  reduce using rule 30 (alpha)

    alpha  go to state 50


State 131

   10 func_return: DDP ID .

    $default  reduce using rule 10 (func_return)


State 132

    5 parameters: parameters COMMA ID DDP . ID

    ID  shift, and go to state 137


State 133

   39 gamma: FOR ID IN sumrest DP sumrest ENDLINE .

    $default  reduce using rule 39 (gamma)


State 134

   38 gamma: FOR ID IN sumrest DP sumrest DP . sumrest ENDLINE

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14

    sumrest  go to state 138
    mullist  go to state 26
    powlist  go to state 27
    valor    go to state 28


State 135

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha . elseif alpha elsee END ENDLINE

    $default  reduce using rule 33 (elseif)

    elseif  go to state 139


State 136

   36 while_sentence: WHILE alpha orlist ENDLINE alpha sentences_list END . ENDLINE

    ENDLINE  shift, and go to state 140


State 137

    5 parameters: parameters COMMA ID DDP ID .

    $default  reduce using rule 5 (parameters)


State 138

   38 gamma: FOR ID IN sumrest DP sumrest DP sumrest . ENDLINE
   53 sumrest: sumrest . SUMA mullist
   54        | sumrest . RESTA mullist

    ENDLINE  shift, and go to state 141
    SUMA     shift, and go to state 53
    RESTA    shift, and go to state 54


State 139

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif . alpha elsee END ENDLINE
   32 elseif: elseif . ELSEIF alpha orlist ENDLINE alpha sentences_list beta

    ELSEIF  shift, and go to state 142

    $default  reduce using rule 30 (alpha)

    alpha  go to state 143


State 140

   36 while_sentence: WHILE alpha orlist ENDLINE alpha sentences_list END ENDLINE .

    $default  reduce using rule 36 (while_sentence)


State 141

   38 gamma: FOR ID IN sumrest DP sumrest DP sumrest ENDLINE .

    $default  reduce using rule 38 (gamma)


State 142

   32 elseif: elseif ELSEIF . alpha orlist ENDLINE alpha sentences_list beta

    $default  reduce using rule 30 (alpha)

    alpha  go to state 144


State 143

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif alpha . elsee END ENDLINE

    ELSE  shift, and go to state 145

    $default  reduce using rule 35 (elsee)

    elsee  go to state 146


State 144

   32 elseif: elseif ELSEIF alpha . orlist ENDLINE alpha sentences_list beta

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 34
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 43
    OC       shift, and go to state 14
    NOT      shift, and go to state 44

    bool_value  go to state 45
    orlist      go to state 147
    andlist     go to state 47
    sumrest     go to state 48
    mullist     go to state 26
    powlist     go to state 27
    valor       go to state 28


State 145

   34 elsee: ELSE . ENDLINE alpha sentences_list

    ENDLINE  shift, and go to state 148


State 146

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif alpha elsee . END ENDLINE

    END  shift, and go to state 149


State 147

   24 orlist: orlist . OR alpha andlist
   32 elseif: elseif ELSEIF alpha orlist . ENDLINE alpha sentences_list beta

    ENDLINE  shift, and go to state 150
    OR       shift, and go to state 75


State 148

   34 elsee: ELSE ENDLINE . alpha sentences_list

    $default  reduce using rule 30 (alpha)

    alpha  go to state 151


State 149

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif alpha elsee END . ENDLINE

    ENDLINE  shift, and go to state 152


State 150

   32 elseif: elseif ELSEIF alpha orlist ENDLINE . alpha sentences_list beta

    $default  reduce using rule 30 (alpha)

    alpha  go to state 153


State 151

   34 elsee: ELSE ENDLINE alpha . sentences_list

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 154
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 152

   31 if_sentence: IF orlist ENDLINE alpha sentences_list beta alpha elseif alpha elsee END ENDLINE .

    $default  reduce using rule 31 (if_sentence)


State 153

   32 elseif: elseif ELSEIF alpha orlist ENDLINE alpha . sentences_list beta

    INTEGER  shift, and go to state 10
    ID       shift, and go to state 11
    FLOAT    shift, and go to state 12
    OP       shift, and go to state 13
    OC       shift, and go to state 14
    RETURN   shift, and go to state 15
    FOR      shift, and go to state 16
    IF       shift, and go to state 17
    WHILE    shift, and go to state 18

    sentences_list  go to state 155
    sentence        go to state 20
    if_sentence     go to state 21
    while_sentence  go to state 22
    for_sentence    go to state 23
    gamma           go to state 24
    sumrest         go to state 25
    mullist         go to state 26
    powlist         go to state 27
    valor           go to state 28


State 154

   14 sentences_list: sentences_list . alpha sentence
   34 elsee: ELSE ENDLINE alpha sentences_list .

    END       reduce using rule 34 (elsee)
    $default  reduce using rule 30 (alpha)

    alpha  go to state 50


State 155

   14 sentences_list: sentences_list . alpha sentence
   32 elseif: elseif ELSEIF alpha orlist ENDLINE alpha sentences_list . beta

    END       reduce using rule 29 (beta)
    ELSE      reduce using rule 29 (beta)
    ELSEIF    reduce using rule 29 (beta)
    $default  reduce using rule 30 (alpha)

    beta   go to state 156
    alpha  go to state 50


State 156

   32 elseif: elseif ELSEIF alpha orlist ENDLINE alpha sentences_list beta .

    $default  reduce using rule 32 (elseif)
